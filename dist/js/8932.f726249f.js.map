{"version":3,"file":"js/8932.f726249f.js","mappings":"6NAOA,MAAMA,EAAgB,CAAC,sBAAuB,+BAEjCC,EAAiBC,GACrBA,GAAMC,MAAMC,GAAMJ,EAAcK,SAASD,EAAEE,UAAUC,QAG9D,GACE,WAAMC,GAEJ,IACMC,KAAKC,OAAOC,QAAQ,sBAAsB,KAAQC,OACpDH,KAAKP,WAAaO,KAAKC,OAAOG,SAAS,qBAAsB,CAAEC,KAAM,KAAQF,MAEjF,CAAE,MAAOG,GAAI,CAGb,KAEO,WACH,OAAWN,KAAKC,OAEpB,CAAE,MAAOK,GAAI,CAGbN,KAAKO,sBAAwBP,KAAKP,QAAUO,KAAKQ,cACnD,EAEA,IAAAC,GACE,MAAO,CAAEhB,KAAM,KAAMc,oBAAqB,KAC5C,EAEAG,SAAU,KACL,QAAW,CAAEC,SAAU,kBAM1B,cAAAH,GACE,OAAOR,KAAKC,OAAOC,QAAQ,kBAAkB,KAAWU,QAC1D,EAEA,KAAAC,GACE,MAAMC,EAAUd,KAAKQ,gBAAgBd,MAAMqB,GAAOA,EAAGC,KAAO,KAAQC,QAEpE,OAAOH,GAASI,KAClB,EAEA,KAAAC,GACE,MAAML,EAAUd,KAAKQ,gBAAgBd,MAAMqB,GAAOA,EAAGC,KAAO,KAAQI,gBAEpE,OAAON,GAASI,KAClB,EAEA,SAAAG,GACE,MAAMP,EAAUd,KAAKQ,gBAAgBd,MAAMqB,GAAOA,EAAGC,KAAO,KAAQM,aAEpE,OAAOR,GAASI,KAClB,EAEA,KAAAK,GACE,MAAMT,EAAUd,KAAKQ,gBAAgBd,MAAMqB,GAAOA,EAAGC,KAAO,KAAQQ,QAGpE,OAAIV,GAASI,MACJJ,GAASI,MAGXlB,KAAKC,OAAOC,QAAQ,cAC7B,EAEA,UAAAuB,GACE,OAAKzB,KAAK0B,kBAUHlC,EAAcQ,KAAKP,MANjB,EAOX,EAEA,iBAAAiC,GAGE,OAAO1B,KAAKW,UAAYX,KAAKO,mBAC/B,GAGFoB,MAAO,CACLR,MAAO,CACL,OAAAS,CAAQC,GACFA,EACF7B,KAAK8B,eAAeD,GAEpB7B,KAAK+B,mBAET,EACAC,WAAW,GAEbX,UAAW,CACT,OAAAO,CAAQC,GACFA,EACF7B,KAAK8B,eAAeD,EAAK,QAEzB7B,KAAK+B,kBAAkB,OAE3B,EACAC,WAAW,GAEbT,MAAO,CACL,OAAAK,GACM5B,KAAKmB,OACPnB,KAAK8B,eAAe9B,KAAKmB,OAEvBnB,KAAKqB,WACPrB,KAAK8B,eAAe9B,KAAKqB,UAAW,QAEtCrB,KAAKiC,cACP,EACAD,WAAW,GAGbP,WAAY,CACV,OAAAG,CAAQC,GACN,GAAK7B,KAAK0B,mBAKNG,IAAQ7B,KAAKa,MAAO,CAEtB,MAAMqB,EAAelC,KAAKQ,gBAAgBd,MAAMqB,GAAOA,EAAGC,KAAO,KAAQC,QAEzE,GAAIiB,EACFA,EAAahB,MAAQ,MACrBgB,EAAaC,WACR,CACL,MAAMC,EAASpC,KAAKC,OAAOC,QAAQ,wBAAwB,KAAWU,SAChEyB,EAAMD,GAAQE,QAAQ,cAExBD,GACFrC,KAAKC,OAAOG,SAAS,oBAAqB,CACxCC,KAAM,KAAWO,QAASf,SAAU,CAAEC,KAAM,KAAQmB,OAASC,MAAO,MAAOqB,QAAS,KACnFC,MAAM1B,GAAYA,EAAQqB,QAEjC,CACF,CACF,EACAH,WAAW,GAEbnB,MAAO,CACL,OAAAe,GACE5B,KAAKiC,cACP,EACAD,WAAW,IAIf,OAAAS,GACEzC,KAAKiC,gBACL,SACF,EACAS,QAAS,CACP,cAAAZ,CAAeX,EAAOrB,EAAO,WAC3B,MAAM6C,GAAO,QAAcxB,EAAOnB,KAAKuB,MAAOzB,GAE9C,IAAK,MAAM8C,KAAQD,EACjBE,SAASC,KAAKC,MAAMC,YAAYJ,EAAMD,EAAKC,GAE/C,EAEA,iBAAAb,CAAkBjC,EAAO,WACvB,MAAM6C,GAAO,QAAc,aAAc3C,KAAKuB,MAAOzB,GAErD,IAAK,MAAM8C,KAAQD,EACjBE,SAASC,KAAKC,MAAME,eAAeL,EAEvC,EACA,YAAAX,GACE,MAAMa,EAAOD,SAASK,qBAAqB,QAAQ,GAC7CC,EAAW,iCACjB,IAAIC,EAAY,SAAUpD,KAAKuB,SAAW4B,IAE1C,GAAKnD,KAAKa,MACR,IACE,MAAMwC,EAAY,SAAQ,KAAwBrD,KAAKa,uBAEtB,SAA7BwC,GAAWC,cACbF,EAAY,GAAID,KAAcnD,KAAKa,eAAiBb,KAAKuB,SAEzD6B,EAAY,SAAUpD,KAAKuB,uCAC3BvB,KAAKC,OAAOG,SAAS,sBAAsC,SAAfJ,KAAKuB,OAErD,CAAE,MAAO,CAEXuB,EAAKS,UAAYH,CACnB,G,uECvMJ,MAAMI,EAAgB,eAChBC,EAAgB,eAChBC,EAAe,gBAEfC,EAAqB,CACzB,mBAA2BH,EAC3B,mBAA2BC,EAC3B,0BAA2BC,GAGvBE,EAAsB,CAC1B,CAACJ,GAAgB,aACjB,CAACC,GAAgB,aACjB,CAACC,GAAgB,eAMZ,SAASG,EAAqBC,GACnC,MAAMC,EAAU,CAAC,EAGXC,EAAcF,EAAM5D,QAAQ,kBAAkB,KAAWU,SAU/D,OARAoD,EAAYC,SAASnD,IACnB,GAAIA,EAAQI,OAAWyC,EAAmB7C,EAAQE,IAAK,CACrD,MAAMkD,EAAYP,EAAmB7C,EAAQE,IAE7C+C,EAAQG,GAAapD,CACvB,KAGKiD,CACT,CAKO,SAASI,EAAyBC,EAAcL,GACrDM,OAAOC,KAAKP,GAASE,SAASjD,IAC5B,IACE,MAAMuD,EAAyBC,KAAKC,MAAMV,EAAQ/C,GAAIE,OAChDwD,EAAUd,EAAoB5C,GAEpCoD,EAAapD,GAAMuD,EACnBH,EAAaM,GAAW,MAC1B,CAAE,MAAO,IAEb,C,kFCtDA,IAAIC,GAAa,EAEV,SAASC,IACd,OAAOD,CACT,CAEO,SAASE,EAAWf,GACzB,MAAMgB,EAAMhB,EAAM5D,QAAQ,mBAAmB,KAAWU,QAAS,KAAQmE,SACnE7C,EAAe4B,EAAM5D,QAAQ,mBAAmB,KAAWU,QAAS,KAAQK,OAC5E+D,EAAOC,EAAapC,SAASqC,KAAKhC,qBAAqB,SAE7D,GAAI8B,EAAM,CACR,IAAIG,EAEwB,SAAxBjD,GAAchB,MAChBiE,EAAa,EAAQ,OACY,QAAxBjD,GAAchB,MACvBiE,EAAa,EAAQ,OACY,cAAxBjD,GAAchB,QACvBiE,EAAa,EAAQ,QAGvBH,EAAKI,KAAON,GAAK5D,OAASiE,GAAcE,EACxCV,GAAa,CACf,CACF,CAEA,SAASW,IACP,MAAMN,EAAOC,EAAapC,SAASqC,KAAKhC,qBAAqB,SAE7D,OAAO8B,EAAOA,EAAKI,KAAO,EAC5B,CAEA,SAASH,EAAaM,GACpB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,MAAMR,EAAOO,EAAMC,GAEnB,GAAIR,EAAKU,KAAK9F,SAAS,QACrB,OAAOoF,CAEX,CAGF,CAEA,MAAMK,EAAiBC,G,4GCoIfK,MAAM,c,aAOHA,MAAM,iB,mBAqBHA,MAAM,c,+BAlDV,EAAU,a,WADlB,QAiEM,O,MA/DH3E,GAAI,EAAAA,I,CAGI,EAAA4E,aAuBO,EAAU,a,WAA1B,QAoCM,S,aAnCJ,QAAmC,OAA9BD,MAAM,uBAAqB,U,yBAChC,QAiCM,MAjCN,EAiCM,EAhCJ,QA+BM,OA9BJA,MAAM,sBACL5C,OAAK,QAAE,EAAA8C,c,EAER,QAoBM,OAnBJF,MAAM,SACL5C,OAAK,QAAE,EAAA+C,c,CAGG,EAAa,gB,WAAxB,QAQM,W,aAPJ,QAMM,mBALoB,EAAAC,OAAOC,MAAI,CAA3BA,EAAMC,M,WADhB,QAMM,OAJHC,IAAKD,EACNN,MAAM,c,QAEHK,GAAI,M,sBAGX,QAKM,MALN,GAKM,QADD,EAAAD,OAAOC,MAAI,K,4BAGlB,QAKS,UAJPL,MAAM,mBACL,QAAK,eAAE,EAAAQ,gB,QAEL,EAAAJ,OAAOK,QAAM,I,qCAxDxB,QAuBM,O,MArBJT,OAAK,SAAC,SAAQ,kBAGa,EAAAU,WAF3B,cAAY,gBACXtD,OAAK,QAAE,EAAA+C,c,CAIG,EAAa,gB,WAAxB,QAQM,W,aAPJ,QAMM,mBALoB,EAAAC,OAAOC,MAAI,CAA3BA,EAAMC,M,WADhB,QAMM,OAJHC,IAAKD,EACNN,MAAM,c,QAEHK,GAAI,M,sBAGX,QAKM,MALN,GAKM,QADD,EAAAD,OAAOC,MAAI,K,oFAhLtB,SACEM,MAAO,CACLC,OAAQ,CACNlG,KAASmG,QACTjE,SAAS,GAEX8D,QAAS,CACPhG,KAASmG,QACTjE,SAAS,GAEXkE,OAAQ,CACNpG,KAASmG,QACTjE,SAAS,IAIb,IAAA9B,GACE,MAAO,CACLiG,YAAa,EACbC,YAAa,EACbC,YAAa,EACbC,aAAa,EACbd,OAAa,CAAC,EAElB,EAEArD,QAAS,CACP,UAAAyD,GACEnG,KAAK0G,YAAa,CACpB,EACA,2BAAAI,CAA4Bf,GAC1B,GAAIA,EAAOC,MAAMP,OAAQ,CAEvB,MAAMsB,EAAYhB,EAAOC,KAAKgB,MAAM,MAAMC,QAAQC,GAAYA,IAE1DH,EAAUtB,OAAS,IACrBsB,EAAU9C,SAAQ,CAACkD,EAAK3B,KACtBuB,EAAUvB,GAAK2B,EAAIC,MAAM,IAE3BrB,EAAOC,KAAOe,EAElB,CAEA,OAAOhB,CACT,GAGFrF,SAAU,CACR,kBAAA2G,GACE,OAAO,OAAqBrH,KAAKC,OACnC,EAEA,aAAAqH,GACE,OAAOtH,KAAKC,OAAOC,QAAQ,kBAAkB,KAAWU,SAASlB,MAAM6H,GAAMA,EAAEvG,KAAO,KAAQwG,SAChG,EAEA,WAAA1B,GACE,MAAO,CACL3E,MAAoBnB,KAAK+F,OAAO5E,MAChC,mBAAoBnB,KAAK+F,OAAO0B,WAChC,aAAoBzH,KAAK+F,OAAO2B,cAChC,cAAoB1H,KAAK+F,OAAO4B,WAAa,OAAS,GACtD,aAAoB3H,KAAK+F,OAAO6B,UAAY,SAAW,GACvD,YAAoB5H,KAAK+F,OAAO8B,SAChC,kBAAoB7H,KAAK+F,OAAO+B,eAAiB,YAAc,GAEnE,EACA,WAAAjC,GACE,MAAO,CACL1E,MAAoBnB,KAAK+F,OAAO5E,MAChC,mBAAoBnB,KAAK+F,OAAO0B,WAEpC,EACA,UAAAM,GACE,SAAK/H,KAAK+F,QAAQC,OAAShG,KAAK+F,QAAQ0B,cAIpCzH,KAAKuG,OACAvG,KAAK2G,WACH3G,KAAKqG,QACPrG,KAAK6G,YACH7G,KAAKyG,OACPzG,KAAK4G,WAGP,KACT,EACA,aAAAoB,GACE,OAAOC,MAAMC,QAAQlI,KAAK+F,QAAQC,KACpC,EACA,YAAAJ,GACE,OAAO5F,KAAKqG,WAAarG,KAAK+F,OAAOK,MACvC,EAGA,EAAApF,GACE,OAAIhB,KAAKuG,OACA,gBACEvG,KAAKqG,QACP,iBACErG,KAAKyG,OACP,gBAGF,QACT,GAGF9E,MAAO,CACL2F,cAAe,CACba,MAAM,EACN,OAAAvG,CAAQC,GACN,GAAIA,GAAKX,OAAuB,KAAdW,EAAIX,MACpB,IACE,MAAMkH,EAAS5D,KAAKC,MAAM5C,EAAIX,QAE9B,OAAyBkH,EAAQpI,KAAKqH,oBAEtC,MAAM,aACJgB,EAAY,aAAEC,EAAY,cAAEC,EAAa,OAAExC,EAAM,WAAEY,EAAU,WAAEC,EAAU,YAAEC,GACzEuB,EACJ,IAAII,EAAgBJ,GAAQrC,QAAU,CAAC,EAEnC,IAAQA,KAERyC,EADE7B,GAAc3G,KAAKuG,OACLvG,KAAK8G,4BAA4BuB,IAAiB,CAAC,EAC1DxB,GAAe7G,KAAKqG,QACbrG,KAAK8G,4BAA4ByB,IAAkB,CAAC,EAC3D3B,GAAc5G,KAAKyG,QACZzG,KAAK8G,4BAA4BwB,IAEjC,CAAC,GAIrBtI,KAAK2G,WAA4B,SAAfA,EAClB3G,KAAK4G,WAA4B,SAAfA,EAClB5G,KAAK6G,YAA8B,SAAhBA,EACnB7G,KAAK+F,OAASyC,CAChB,CAAE,MAAO,CAEb,EACAxG,WAAW,K,wBC9IjB,MAAMyG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,G,mHCLIC,EAA0B,IAA4B,KAC1DA,EAAwBnD,EAAE,KAE1BmD,EAAwBC,KAAK,CAACC,EAAO7H,GAAI,yhCAA0hC,KAEnkC,S,kBCNA,IAAI8H,EAAU,EAAQ,OACnBA,EAAQC,aAAYD,EAAUA,EAAQvG,SACnB,kBAAZuG,IAAsBA,EAAU,CAAC,CAACD,EAAO7H,GAAI8H,EAAS,MAC7DA,EAAQE,SAAQH,EAAOI,QAAUH,EAAQE,QAE5C,IAAIE,EAAM,WACGA,EAAI,WAAYJ,GAAS,EAAM,CAAC,WAAY,EAAM,YAAa,G","sources":["webpack://ui-plugin-examples/./node_modules/@rancher/shell/mixins/brand.js","webpack://ui-plugin-examples/./node_modules/@rancher/shell/utils/banners.js","webpack://ui-plugin-examples/./node_modules/@rancher/shell/utils/favicon.js","webpack://ui-plugin-examples/./node_modules/@rancher/shell/components/FixedBanner.vue","webpack://ui-plugin-examples/./node_modules/@rancher/shell/components/FixedBanner.vue?63c7","webpack://ui-plugin-examples/./node_modules/@rancher/shell/components/FixedBanner.vue?09fc","webpack://ui-plugin-examples/./node_modules/@rancher/shell/components/FixedBanner.vue?1a03"],"sourcesContent":["import { mapGetters } from 'vuex';\nimport { CATALOG, MANAGEMENT } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\nimport { createCssVars } from '@shell/utils/color';\nimport { setTitle } from '@shell/config/private-label';\nimport { setFavIcon, haveSetFavIcon } from '@shell/utils/favicon';\n\nconst cspAdaptorApp = ['rancher-csp-adapter', 'rancher-csp-billing-adapter'];\n\nexport const hasCspAdapter = (apps) => {\n  return apps?.find((a) => cspAdaptorApp.includes(a.metadata?.name));\n};\n\nexport default {\n  async fetch() {\n    // For the login page, the schemas won't be loaded - we don't need the apps in this case\n    try {\n      if (this.$store.getters['management/canList'](CATALOG.APP)) {\n        this.apps = await this.$store.dispatch('management/findAll', { type: CATALOG.APP });\n      }\n    } catch (e) {}\n\n    // Ensure we read the settings even when we are not authenticated\n    try {\n      // The favicon is implicitly dependent on the initial settings having already been fetched\n      if (!haveSetFavIcon()) {\n        setFavIcon(this.$store);\n      }\n    } catch (e) {}\n\n    // Setting this up front will remove `computed` churn, and we only care that we've initialised them\n    this.haveAppsAndSettings = !!this.apps && !!this.globalSettings;\n  },\n\n  data() {\n    return { apps: null, haveAppsAndSettings: null };\n  },\n\n  computed: {\n    ...mapGetters({ loggedIn: 'auth/loggedIn' }),\n\n    // added to fix https://github.com/rancher/dashboard/issues/10788\n    // because on logout the brand mixin is mounted, but then a management store reset happens\n    // since login view get loaded, another fetchInitialSettings get's done\n    // which in turn will populate again globalSettings\n    globalSettings() {\n      return this.$store.getters['management/all'](MANAGEMENT.SETTING);\n    },\n\n    brand() {\n      const setting = this.globalSettings?.find((gs) => gs.id === SETTING.BRAND);\n\n      return setting?.value;\n    },\n\n    color() {\n      const setting = this.globalSettings?.find((gs) => gs.id === SETTING.PRIMARY_COLOR);\n\n      return setting?.value;\n    },\n\n    linkColor() {\n      const setting = this.globalSettings?.find((gs) => gs.id === SETTING.LINK_COLOR);\n\n      return setting?.value;\n    },\n\n    theme() {\n      const setting = this.globalSettings?.find((gs) => gs.id === SETTING.THEME);\n\n      // This handles cases where the settings update after the page loads (like on log out)\n      if (setting?.value) {\n        return setting?.value;\n      }\n\n      return this.$store.getters['prefs/theme'];\n    },\n\n    cspAdapter() {\n      if (!this.canCalcCspAdapter) {\n        // We only have a watch on cspAdapter to kick off persisting the brand setting.\n        // So we need to ensure we don't return an undefined here... which would match the undefined gave if no csp app was found...\n        // .. and wouldn't kick off the watcher\n        return '';\n      }\n\n      // Note! this used to be `findBy(this.app)` however for that case we lost reactivity on the collection\n      // (computed fires before fetch, fetch happens and update apps, computed would not fire again - even with vue.set)\n      // So use `.find` in method instead\n      return hasCspAdapter(this.apps);\n    },\n\n    canCalcCspAdapter() {\n      // We need to take consider the loggedIn state, as the brand mixin is used in the logout page where we can be in a mixed state\n      // (things in store but user has no auth to make changes)\n      return this.loggedIn && this.haveAppsAndSettings;\n    }\n  },\n\n  watch: {\n    color: {\n      handler(neu) {\n        if (neu) {\n          this.setCustomColor(neu);\n        } else {\n          this.removeCustomColor();\n        }\n      },\n      immediate: true\n    },\n    linkColor: {\n      handler(neu) {\n        if (neu) {\n          this.setCustomColor(neu, 'link');\n        } else {\n          this.removeCustomColor('link');\n        }\n      },\n      immediate: true\n    },\n    theme: {\n      handler() {\n        if (this.color) {\n          this.setCustomColor(this.color);\n        }\n        if (this.linkColor) {\n          this.setCustomColor(this.linkColor, 'link');\n        }\n        this.setBodyClass();\n      },\n      immediate: true\n    },\n\n    cspAdapter: {\n      handler(neu) {\n        if (!this.canCalcCspAdapter) {\n          return;\n        }\n\n        // The brand setting will only get updated if...\n        if (neu && !this.brand) {\n          // 1) There should be a brand... but there's no brand setting\n          const brandSetting = this.globalSettings?.find((gs) => gs.id === SETTING.BRAND);\n\n          if (brandSetting) {\n            brandSetting.value = 'csp';\n            brandSetting.save();\n          } else {\n            const schema = this.$store.getters['management/schemaFor'](MANAGEMENT.SETTING);\n            const url = schema?.linkFor('collection');\n\n            if (url) {\n              this.$store.dispatch('management/create', {\n                type: MANAGEMENT.SETTING, metadata: { name: SETTING.BRAND }, value: 'csp', default: ''\n              }).then((setting) => setting.save());\n            }\n          }\n        }\n      },\n      immediate: true\n    },\n    brand: {\n      handler() {\n        this.setBodyClass();\n      },\n      immediate: true\n    }\n\n  },\n  mounted() {\n    this.setBodyClass();\n    setTitle();\n  },\n  methods: {\n    setCustomColor(color, name = 'primary') {\n      const vars = createCssVars(color, this.theme, name);\n\n      for (const prop in vars) {\n        document.body.style.setProperty(prop, vars[prop]);\n      }\n    },\n\n    removeCustomColor(name = 'primary') {\n      const vars = createCssVars('rgb(0,0,0)', this.theme, name);\n\n      for (const prop in vars) {\n        document.body.style.removeProperty(prop);\n      }\n    },\n    setBodyClass() {\n      const body = document.getElementsByTagName('body')[0];\n      const cssClass = `overflow-hidden dashboard-body`;\n      let bodyClass = `theme-${ this.theme } ${ cssClass }`;\n\n      if ( this.brand ) {\n        try {\n          const brandMeta = require(`~shell/assets/brand/${ this.brand }/metadata.json`);\n\n          if (brandMeta?.hasStylesheet === 'true') {\n            bodyClass = `${ cssClass } ${ this.brand } theme-${ this.theme }`;\n          } else {\n            bodyClass = `theme-${ this.theme } overflow-hidden dashboard-body`;\n            this.$store.dispatch('prefs/setBrandStyle', this.theme === 'dark');\n          }\n        } catch {}\n      }\n      body.className = bodyClass;\n    }\n  }\n\n};\n","/**\n *\n * Helper utilities for the fixed banners that can be configured to show on pages\n *\n */\n\nimport { MANAGEMENT } from '@shell/config/types';\n\nconst BANNER_HEADER = 'bannerHeader';\nconst BANNER_FOOTER = 'bannerFooter';\nconst BANNER_LOGIN = 'bannerConsent';\n\nconst INDIVIDUAL_BANNERS = {\n  'ui-banner-header':        BANNER_HEADER,\n  'ui-banner-footer':        BANNER_FOOTER,\n  'ui-banner-login-consent': BANNER_LOGIN,\n};\n\nconst BANNER_SHOW_KEY_MAP = {\n  [BANNER_HEADER]: 'showHeader',\n  [BANNER_FOOTER]: 'showFooter',\n  [BANNER_LOGIN]:  'showConsent',\n};\n\n/**\n * Get the individual banner settings\n */\nexport function getIndividualBanners(store) {\n  const banners = {};\n\n  // Go through all settings looking for the individual settings\n  const allSettings = store.getters['management/all'](MANAGEMENT.SETTING);\n\n  allSettings.forEach((setting) => {\n    if (setting.value && !!INDIVIDUAL_BANNERS[setting.id]) {\n      const settingId = INDIVIDUAL_BANNERS[setting.id];\n\n      banners[settingId] = setting;\n    }\n  });\n\n  return banners;\n}\n\n/**\n * Overlay settings from the individual banner settings onto the single banner setting\n */\nexport function overlayIndividualBanners(parsedBanner, banners) {\n  Object.keys(banners).forEach((id) => {\n    try {\n      const parsedIndividualBanner = JSON.parse(banners[id].value);\n      const shownID = BANNER_SHOW_KEY_MAP[id];\n\n      parsedBanner[id] = parsedIndividualBanner;\n      parsedBanner[shownID] = 'true'; // If there is an individual banner setting, then banner is shown\n    } catch {}\n  });\n}\n","import { SETTING } from '@shell/config/settings';\nimport { MANAGEMENT } from '@shell/config/types';\n\nlet favIconSet = false;\n\nexport function haveSetFavIcon() {\n  return favIconSet;\n}\n\nexport function setFavIcon(store) {\n  const res = store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.FAVICON);\n  const brandSetting = store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.BRAND);\n  const link = findIconLink(document.head.getElementsByTagName('link'));\n\n  if (link) {\n    let brandImage;\n\n    if (brandSetting?.value === 'suse') {\n      brandImage = require('~shell/assets/brand/suse/favicon.png');\n    } else if (brandSetting?.value === 'csp') {\n      brandImage = require('~shell/assets/brand/csp/favicon.png');\n    } else if (brandSetting?.value === 'harvester') {\n      brandImage = require('~shell/assets/brand/harvester/favicon.png');\n    }\n\n    link.href = res?.value || brandImage || defaultFavIcon;\n    favIconSet = true;\n  }\n}\n\nfunction getCurrentFavIcon() {\n  const link = findIconLink(document.head.getElementsByTagName('link'));\n\n  return link ? link.href : '';\n}\n\nfunction findIconLink(links) {\n  for (let i = 0; i < links.length; i++) {\n    const link = links[i];\n\n    if (link.rel?.includes('icon')) {\n      return link;\n    }\n  }\n\n  return undefined;\n}\n\nconst defaultFavIcon = getCurrentFavIcon();\n","<script>\nimport { MANAGEMENT } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\nimport isEmpty from 'lodash/isEmpty';\nimport { getIndividualBanners, overlayIndividualBanners } from '@shell/utils/banners';\n\nexport default {\n  props: {\n    header: {\n      type:    Boolean,\n      default: false\n    },\n    consent: {\n      type:    Boolean,\n      default: false\n    },\n    footer: {\n      type:    Boolean,\n      default: false\n    },\n  },\n\n  data() {\n    return {\n      showDialog:  true,\n      showHeader:  false,\n      showFooter:  false,\n      showConsent: false,\n      banner:      {},\n    };\n  },\n\n  methods: {\n    hideDialog() {\n      this.showDialog = false;\n    },\n    handleLineBreaksConsentText(banner) {\n      if (banner.text?.length) {\n        // split text by newline char\n        const textArray = banner.text.split('\\n').filter((element) => element);\n\n        if (textArray.length > 1) {\n          textArray.forEach((str, i) => {\n            textArray[i] = str.trim();\n          });\n          banner.text = textArray;\n        }\n      }\n\n      return banner;\n    }\n  },\n\n  computed: {\n    uiBannerIndividual() {\n      return getIndividualBanners(this.$store);\n    },\n\n    bannerSetting() {\n      return this.$store.getters['management/all'](MANAGEMENT.SETTING).find((s) => s.id === SETTING.BANNERS);\n    },\n\n    bannerStyle() {\n      return {\n        color:              this.banner.color,\n        'background-color': this.banner.background,\n        'text-align':       this.banner.textAlignment,\n        'font-weight':      this.banner.fontWeight ? 'bold' : '',\n        'font-style':       this.banner.fontStyle ? 'italic' : '',\n        'font-size':        this.banner.fontSize,\n        'text-decoration':  this.banner.textDecoration ? 'underline' : ''\n      };\n    },\n    dialogStyle() {\n      return {\n        color:              this.banner.color,\n        'background-color': this.banner.background\n      };\n    },\n    showBanner() {\n      if (!this.banner?.text && !this.banner?.background) {\n        return false;\n      }\n\n      if (this.header) {\n        return this.showHeader;\n      } else if (this.consent) {\n        return this.showConsent;\n      } else if (this.footer) {\n        return this.showFooter;\n      }\n\n      return null;\n    },\n    isTextAnArray() {\n      return Array.isArray(this.banner?.text);\n    },\n    showAsDialog() {\n      return this.consent && !!this.banner.button;\n    },\n\n    // ID to place on the Banner DIV\n    id() {\n      if (this.header) {\n        return 'banner-header';\n      } else if (this.consent) {\n        return 'banner-consent';\n      } else if (this.footer) {\n        return 'banner-footer';\n      }\n\n      return 'banner';\n    }\n  },\n\n  watch: {\n    bannerSetting: {\n      deep: true,\n      handler(neu) {\n        if (neu?.value && neu.value !== '') {\n          try {\n            const parsed = JSON.parse(neu.value);\n\n            overlayIndividualBanners(parsed, this.uiBannerIndividual);\n\n            const {\n              bannerHeader, bannerFooter, bannerConsent, banner, showHeader, showFooter, showConsent\n            } = parsed;\n            let bannerContent = parsed?.banner || {};\n\n            if (isEmpty(banner)) {\n              if (showHeader && this.header) {\n                bannerContent = this.handleLineBreaksConsentText(bannerHeader) || {};\n              } else if (showConsent && this.consent) {\n                bannerContent = this.handleLineBreaksConsentText(bannerConsent) || {};\n              } else if (showFooter && this.footer) {\n                bannerContent = this.handleLineBreaksConsentText(bannerFooter) || {};\n              } else {\n                bannerContent = {};\n              }\n            }\n\n            this.showHeader = showHeader === 'true';\n            this.showFooter = showFooter === 'true';\n            this.showConsent = showConsent === 'true';\n            this.banner = bannerContent;\n          } catch {}\n        }\n      },\n      immediate: true\n    },\n\n  }\n};\n</script>\n\n<template>\n  <div\n    v-if=\"showBanner\"\n    :id=\"id\"\n  >\n    <div\n      v-if=\"!showAsDialog\"\n      class=\"banner\"\n      data-testid=\"fixed__banner\"\n      :style=\"bannerStyle\"\n      :class=\"{'banner-consent': consent}\"\n    >\n      <!-- text as array to support line breaks programmatically rather than just exposing HTML -->\n      <div v-if=\"isTextAnArray\">\n        <div\n          v-for=\"(text, index) in banner.text\"\n          :key=\"index\"\n          class=\"array-row\"\n        >\n          {{ text }}\n        </div>\n      </div>\n      <div\n        v-else\n        class=\"single-row\"\n      >\n        {{ banner.text }}\n      </div>\n    </div>\n    <div v-else-if=\"showDialog\">\n      <div class=\"banner-dialog-glass\" />\n      <div class=\"banner-dialog\">\n        <div\n          class=\"banner-dialog-frame\"\n          :style=\"dialogStyle\"\n        >\n          <div\n            class=\"banner\"\n            :style=\"bannerStyle\"\n          >\n            <!-- text as array to support line breaks programmatically rather than just exposing HTML -->\n            <div v-if=\"isTextAnArray\">\n              <div\n                v-for=\"(text, index) in banner.text\"\n                :key=\"index\"\n                class=\"array-row\"\n              >\n                {{ text }}\n              </div>\n            </div>\n            <div\n              v-else\n              class=\"single-row\"\n            >\n              {{ banner.text }}\n            </div>\n          </div>\n          <button\n            class=\"btn role-primary\"\n            @click=\"hideDialog()\"\n          >\n            {{ banner.button }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .banner {\n    text-align: center;\n    line-height: 2em;\n    width: 100%;\n    padding: 0 20px;\n\n    &.banner-consent {\n      height: unset;\n      min-height: 2em;\n      overflow: hidden;\n    }\n  }\n  .banner-dialog, .banner-dialog-glass {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100vw;\n    height: 100vh;\n  }\n  .banner-dialog-glass {\n    z-index: 5000;\n    background-color: var(--default);\n    opacity: 0.75;\n  }\n  .banner-dialog {\n    z-index: 5001;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    .banner-dialog-frame {\n      border: 2px solid var(--border);\n      display: flex;\n      align-items: center;\n      flex-direction: column;\n      padding: 20px;\n      height: fit-content;\n      width: fit-content;\n      min-width: 50%;\n      max-width: 80%;\n      max-height: 90%;\n\n      .banner {\n        height: initial;\n        overflow-y: auto;\n      }\n\n      button {\n        margin-top: 10px;\n        max-width: 50%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        width: fit-content;\n      }\n    }\n  }\n</style>\n","import { render } from \"./FixedBanner.vue?vue&type=template&id=45ab2040&scoped=true\"\nimport script from \"./FixedBanner.vue?vue&type=script&lang=js\"\nexport * from \"./FixedBanner.vue?vue&type=script&lang=js\"\n\nimport \"./FixedBanner.vue?vue&type=style&index=0&id=45ab2040&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-45ab2040\"]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../css-loader/dist/cjs.js??clonedRuleSet-22.use[1]!../../../vue-loader/dist/stylePostLoader.js!../../../postcss-loader/dist/cjs.js??clonedRuleSet-22.use[2]!../../../postcss-loader/dist/cjs.js??clonedRuleSet-22.use[3]!../../../xterm/css/xterm.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.banner[data-v-45ab2040]{text-align:center;line-height:2em;width:100%;padding:0 20px}.banner.banner-consent[data-v-45ab2040]{height:unset;min-height:2em;overflow:hidden}.banner-dialog[data-v-45ab2040],.banner-dialog-glass[data-v-45ab2040]{position:absolute;top:0;left:0;width:100vw;height:100vh}.banner-dialog-glass[data-v-45ab2040]{z-index:5000;background-color:var(--default);opacity:.75}.banner-dialog[data-v-45ab2040]{z-index:5001;display:flex;align-items:center;justify-content:center}.banner-dialog .banner-dialog-frame[data-v-45ab2040]{border:2px solid var(--border);display:flex;align-items:center;flex-direction:column;padding:20px;height:-moz-fit-content;height:fit-content;width:-moz-fit-content;width:fit-content;min-width:50%;max-width:80%;max-height:90%}.banner-dialog .banner-dialog-frame .banner[data-v-45ab2040]{height:auto;overflow-y:auto}.banner-dialog .banner-dialog-frame button[data-v-45ab2040]{margin-top:10px;max-width:50%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:-moz-fit-content;width:fit-content}`, \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../css-loader/dist/cjs.js??clonedRuleSet-22.use[1]!../../../vue-loader/dist/stylePostLoader.js!../../../postcss-loader/dist/cjs.js??clonedRuleSet-22.use[2]!../../../postcss-loader/dist/cjs.js??clonedRuleSet-22.use[3]!../../../sass-loader/dist/cjs.js??clonedRuleSet-22.use[4]!../../../cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../vue-loader/dist/index.js??ruleSet[0].use[1]!./FixedBanner.vue?vue&type=style&index=0&id=45ab2040&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b88fe502\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["cspAdaptorApp","hasCspAdapter","apps","find","a","includes","metadata","name","fetch","this","$store","getters","APP","dispatch","type","e","haveAppsAndSettings","globalSettings","data","computed","loggedIn","SETTING","brand","setting","gs","id","BRAND","value","color","PRIMARY_COLOR","linkColor","LINK_COLOR","theme","THEME","cspAdapter","canCalcCspAdapter","watch","handler","neu","setCustomColor","removeCustomColor","immediate","setBodyClass","brandSetting","save","schema","url","linkFor","default","then","mounted","methods","vars","prop","document","body","style","setProperty","removeProperty","getElementsByTagName","cssClass","bodyClass","brandMeta","hasStylesheet","className","BANNER_HEADER","BANNER_FOOTER","BANNER_LOGIN","INDIVIDUAL_BANNERS","BANNER_SHOW_KEY_MAP","getIndividualBanners","store","banners","allSettings","forEach","settingId","overlayIndividualBanners","parsedBanner","Object","keys","parsedIndividualBanner","JSON","parse","shownID","favIconSet","haveSetFavIcon","setFavIcon","res","FAVICON","link","findIconLink","head","brandImage","href","defaultFavIcon","getCurrentFavIcon","links","i","length","rel","class","showAsDialog","dialogStyle","bannerStyle","banner","text","index","key","hideDialog","button","consent","props","header","Boolean","footer","showDialog","showHeader","showFooter","showConsent","handleLineBreaksConsentText","textArray","split","filter","element","str","trim","uiBannerIndividual","bannerSetting","s","BANNERS","background","textAlignment","fontWeight","fontStyle","fontSize","textDecoration","showBanner","isTextAnArray","Array","isArray","deep","parsed","bannerHeader","bannerFooter","bannerConsent","bannerContent","__exports__","render","___CSS_LOADER_EXPORT___","push","module","content","__esModule","locals","exports","add"],"sourceRoot":""}